{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableHeader","tableBody","offices","insertAdjacentHTML","createSelectList","form","isSortedColumn","sortColumns","a","b","includes","slice","replace","localeCompare","addEventListener","e","indexColumn","children","findIndex","el","target","ASC","sort","textContent","append","DESC","start","previosTargetRow","map","office","join","convertSalary","salary","toLocaleString","validData","key","value","data","trim","length","pushNotification","find","x","toUpperCase","toLowerCase","undefined","posTop","title","description","type","body","contains","remove","notification","createElement","heading","message","classList","add","dataset","qa","style","top","setTimeout","selectedRow","closest","preventDefault","newEmployee","FormData","formValues","Object","fromEntries","entries","values","innerHTML","reset","nameColumn","selectedCell","textCell","select","ev","code","blur","input","focus","text"],"mappings":"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","file":"main.b5e2ea56.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHeader = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst offices = [\n  'Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco',\n];\n\ntable.insertAdjacentHTML('afterend', `\n  <form method=\"/\" action=\"GET\" class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" type=\"text\" data-qa=\"office\">\n        <option selected disabled></option>\n        ${createSelectList()}\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\">\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\n\nlet isSortedColumn = null;\n\nfunction sortColumns(a, b) {\n  if (a.includes('$')) {\n    return a.slice(1).replace(',', '') - b.slice(1).replace(',', '');\n  }\n\n  if (+a) {\n    return a - b;\n  }\n\n  return a.localeCompare(b);\n}\n\ntableHeader.addEventListener('click', e => {\n  const indexColumn = [...tableHeader.children].findIndex(el =>\n    el === e.target\n  );\n\n  if (isSortedColumn !== e.target) {\n    const ASC = [...tableBody.children].sort((a, b) => {\n      const start = a.children[indexColumn].textContent;\n      const end = b.children[indexColumn].textContent;\n\n      return sortColumns(start, end);\n    });\n\n    tableBody.append(...ASC);\n    isSortedColumn = e.target;\n\n    return;\n  }\n\n  if (isSortedColumn === e.target) {\n    const DESC = [...tableBody.children].sort((a, b) => {\n      const start = a.children[indexColumn].textContent;\n      const end = b.children[indexColumn].textContent;\n\n      return sortColumns(end, start);\n    });\n\n    tableBody.append(...DESC);\n    isSortedColumn = null;\n  }\n});\n\nlet previosTargetRow = null;\n\ntableBody.addEventListener('click', e => {\n  const selectedRow = e.target.closest('tr');\n\n  if (previosTargetRow) {\n    previosTargetRow.classList.remove('active');\n  }\n\n  if (previosTargetRow === selectedRow) {\n    previosTargetRow.classList.remove('active');\n    previosTargetRow = null;\n\n    return;\n  }\n\n  previosTargetRow = selectedRow;\n\n  selectedRow.classList.add('active');\n});\n\nfunction createSelectList() {\n  return `${offices.map(office => `<option>${office}</option>`).join('')}`;\n}\n\nfunction convertSalary(salary) {\n  return `$${(+salary).toLocaleString('en-US')}`;\n}\n\nfunction validData(key, value, data) {\n  if (key === 'name') {\n    if (value.trim().length < 4) {\n      return pushNotification(450, 'error',\n        'The \"Name\" must contain more than 4 letters', 'error');\n    }\n\n    if ([...value].find(\n      x => x.toUpperCase() === x.toLowerCase() && x !== ' '\n    )) {\n      return pushNotification(450, 'error',\n        'Invalid data, please use letters in \"Name\" field', 'error');\n    }\n  }\n\n  if (key === 'position') {\n    if (value.trim().length === 0) {\n      return pushNotification(450, 'error',\n        'The \"Position\" is empty', 'error');\n    }\n\n    if ([...value].find(\n      x => x.toUpperCase() === x.toLowerCase() && x !== ' '\n    )) {\n      return pushNotification(450, 'error',\n        'Invalid data, please use letters in \"Position\" field', 'error');\n    }\n  }\n\n  if (data !== undefined) {\n    if (!('office' in data)) {\n      if (value.length === 0) {\n        return pushNotification(450, 'error',\n          'The \"Office\" is not selected', 'error');\n      }\n    }\n  }\n\n  if (key === 'age') {\n    if (value < 18 || value > 90) {\n      return pushNotification(450, 'error',\n        'The age must be more than 18 and less than 90', 'error');\n    }\n  }\n\n  if (key === 'salary') {\n    if (+value.slice(1) <= 0) {\n      return pushNotification(450, 'error',\n        'The \"Salary\" is empty', 'error');\n    }\n  }\n\n  return true;\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const newEmployee = document.createElement('tr');\n  const data = new FormData(form);\n  const formValues = Object.fromEntries(data.entries());\n\n  formValues.salary = convertSalary(formValues.salary);\n\n  const values = [...Object.values(formValues)];\n\n  for (const key in formValues) {\n    if (validData(key, formValues[key], formValues) !== true) {\n      return;\n    }\n  }\n\n  newEmployee.innerHTML = `\n    ${values.map(value => `<td>${value.trim()}</td>`).join('')}\n  `;\n\n  tableBody.append(newEmployee);\n\n  pushNotification(10, 'success',\n    'The data has been added successfully', 'success');\n  form.reset();\n});\n\nfunction pushNotification(posTop, title, description, type) {\n  if (document.body.contains(document.querySelector('.notification'))) {\n    document.querySelector('.notification').remove();\n  }\n\n  const notification = document.createElement('div');\n  const heading = document.createElement('h2');\n  const message = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  heading.classList.add('title');\n\n  heading.textContent = title;\n  message.textContent = description;\n\n  notification.append(heading);\n  notification.append(message);\n  document.body.append(notification);\n\n  notification.style.top = `${posTop}px`;\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n};\n\nconst nameColumn = {\n  0: 'name',\n  1: 'position',\n  2: 'office',\n  3: 'age',\n  4: 'salary',\n};\n\ntableBody.addEventListener('dblclick', e => {\n  if (document.querySelector('.cell-input')) {\n    return;\n  }\n\n  const selectedCell = e.target.closest('td');\n  const textCell = selectedCell.textContent;\n\n  selectedCell.textContent = '';\n\n  const findIndex = [...e.target.closest('tr').children].findIndex(x =>\n    x === e.target.closest('td')\n  );\n\n  if (findIndex === 2) {\n    const select = document.createElement('select');\n\n    select.classList.add('cell-input');\n    selectedCell.append(select);\n\n    select.innerHTML = `\n      ${createSelectList()}\n    `;\n\n    select.addEventListener('blur', () => {\n      selectedCell.textContent = select.value;\n    });\n\n    select.addEventListener('keydown', ev => {\n      if (ev.code === 'Enter') {\n        select.blur();\n      }\n    });\n  } else {\n    const input = document.createElement('input');\n\n    input.classList.add('cell-input');\n    selectedCell.append(input);\n    input.focus();\n\n    if (findIndex > 2) {\n      input.type = 'number';\n    }\n\n    input.addEventListener('blur', () => {\n      let text = input.value.trim();\n\n      if (findIndex === 4) {\n        text = convertSalary(text);\n      }\n\n      if (validData(nameColumn[findIndex], text) !== true) {\n        selectedCell.textContent = textCell;\n\n        return;\n      }\n\n      selectedCell.textContent = text;\n\n      pushNotification(\n        10, 'success', 'The data has been successfully changed', 'success'\n      );\n    });\n\n    input.addEventListener('keydown', ev => {\n      if (ev.code === 'Enter') {\n        input.blur();\n      }\n    });\n  }\n});\n"]}